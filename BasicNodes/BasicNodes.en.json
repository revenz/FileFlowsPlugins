{
    "Enums":{
        "LogType":{
            "Info":"Information",
            "Debug":"Debug",
            "Warning":"Warning",
            "Error":"Error"
        }
    },
    "Flow":{
      "Parts": {
        "InputFile": {
          "Description": "An input node for a file.  This is required and is the starting point of a flow.  Any input node can be used, just one is required.",
          "Outputs": {
            "1": "Library File"
          }
        },
        "InputFolder": {
          "Description": "An input node for a folder.  This will only work if the library using this flow is configured for folders.",
          "Outputs": {
            "1": "Library Folder"
          }
        },
        "CopyFile": {
          "Description": "Copies a file to the destination folder",
          "Outputs": {
            "1": "File copied"
          },
          "Fields": {
            "DestinationPath": "Destination Folder",
            "DestinationPath-Help": "The folder where the file will be copied to",
            "DestinationFile": "Destination File",
            "DestinationFile-Help": "The filename to copy the file to.  If empty, the original filename will be used",
            "CopyFolder": "Copy Folder",
            "CopyFolder-Help": "If the relative library folder structure should be copied too",
            "AdditionalFiles": "Additional Files",
            "AdditionalFiles-Help": "Additional files to copy from the directory to the new directory.\nEach value can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn''t support regular expressions.",
            "AdditionalFilesFromOriginal": "Original Directory",
            "AdditionalFilesFromOriginal-Help": "If the additional files should be copied from the working directory or from the original directory.  Turn on for original directory."
          }
        },
        "DeleteSourceDirectory": {
          "Label": "Delete Source Folder",
          "Outputs": {
            "1": "Source directory deleted",
            "2": "Directory was NOT deleted"
          },
          "Description": "Deletes the source folder of the original library file",
          "Fields": {
            "IfEmpty": "If Empty",
            "IfEmpty-Help": "Only delete the source folder if the it is empty",
            "IncludePatterns": "Include Patterns",
            "IncludePatterns-Help": "Optional, if set only files matching these patterns will be counted to see if the folder is empty.   Any of these patterns can match.",
            "KeepParents": "Keep parent folders",
            "KeepParents-Help": "Optional, if set parent folders will not be removed.\nThis only includes the folders inside of your library"
          }
        },
        "Executor": {
          "Description": "Execute the following process against the file.\nOutput 1: The process returned the success exit code\nOutput 2: The process return a non-successful exit code.",
          "Outputs": {
            "1": "Process returned success",
            "2": "Process returned failure"
          },
          "Fields": {
            "FileName": "File Name",
            "FileName-Help": "The name of the file to execute",
            "Arguments": "Arguments",
            "Arguments-Help": "The arguments to be passed to the process to execute",
            "WorkingDirectory": "Working Folder",
            "WorkingDirectory-Help": "The folder where the process will be executed from",
            "SuccessCode": "Success Code",
            "SuccessCode-Help": "The exit code of the process indicating the process was successful.  Usually this should be 0.",
            "Timeout": "Timeout",
            "Timeout-Help": "How long the process can run for before being terminated.  Use 0 for no timeout.",
            "Timeout-Suffix": "seconds",
            "OutputVariable": "Output Variable",
            "OutputVariable-Help": "An optional variable name to store the process output into",
            "OutputErrorVariable": "Output Error Variable",
            "OutputErrorVariable-Help": "An optional variable name to store the process error output into"
          }
        },
        "FileExtension": {
          "Description": "Checks if the file has one of the configured extensions.\n\nOutput 1: Matches\nOutput 2: Does not match",
          "Outputs": {
            "1": "Extension match",
            "2": "Extension did not match"
          },
          "Fields": {
            "Extensions": "Extensions",
            "Extensions-Help": "A list of case insensitive file extensions that will be matched against.\nOutput 1 Matches\nOutput 2: Does not match"
          }
        },
        "FileExists": {
          "Description": "Checks if a file exists\n\nOutput 1: File exists\nOutput 2: File does not exist",
          "Outputs": {
            "1": "File exists",
            "2": "File does not exist"
          },
          "Fields": {
            "FileName": "File Name",
            "FileName-Help": "The file to check if exists.  This should be used with a variable from a previous node."
          }
        },
        "Delete": {
          "Description": "Deletes a file",
          "Outputs": {
            "1": "File deleted"
          },
          "Fields": {
            "FileName": "File Name",
            "FileName-Help": "If left blank the current working file will be deleted, or folder if library is folder based."
          }
        },
        "FileSize": {
          "Description": "Checks if the file size matches the configured parameters. The values are in megabytes.\n\nOutput 1: Matches\nOutput 2: Does not match",
          "Outputs": {
            "1": "File size within range",
            "2": "File size not within range"
          },
          "Fields": {
            "Comparison": "Comparison",
            "Lower": "Greater Than",
            "Lower-Suffix": "MB",
            "Lower-Help": "The value it must be greater than this number of megabytes",
            "Upper": "Less Than",
            "Upper-Suffix": "MB",
            "Upper-Help": "The value it must be less than than this number of megabytes. Leave as 0 to not test the upper limit."
          }
        },
        "FileSizeCompare": {
          "Description": "Checks if the file size has changed sized from the original file. \n\nOutput 1: File is smaller than original\nOutput 2: File is same size\nOutput 3: File is larger than original",
          "Outputs": {
            "1": "Smaller than original",
            "2": "Same size as original",
            "3": "Larger than original"
          }

        },
        "Function": {
          "Outputs": {
            "1": "returned 1",
            "2": "returned 2",
            "3": "returned 3",
            "4": "returned 4",
            "5": "returned 5",
            "6": "returned 6",
            "7": "returned 7",
            "8": "returned 8",
            "9": "returned 9",
            "10": "returned 10"
          },
          "Fields": {
            "Outputs": "Outputs",
            "Template": "Template",
            "Template-Help": "WARNING: This will replace whatever is in the code block with the template you select.",
            "Code": "Code",
            "Code-Help": "return -1 for error and flow to stop.  return 0 for flow to complete.  return 1 or more for the desired output to be called"
          }
        },
        "GotoFlow": {
          "Description": "This lets you switch to a different flow to process.  This flow will exit and the parameters and working file will be passed into the new Flow",
          "Fields": {
            "Flow": "Flow"
          }
        },
        "Log": {
          "Description": "Logs a message to the flow log",
          "Outputs": {
            "1": "Message logged"
          },
          "Fields": {
            "LogType": "Type",
            "Message": "Message"
          }
        },
        "MoveFile": {
          "Description": "Moves a file to the destination folder",
          "Outputs": {
            "1": "File moved"
          },
          "Fields": {
            "DestinationPath": "Destination Folder",
            "DestinationPath-Help": "The folder where the file will be moved to",
            "DestinationFile": "Destination File",
            "DestinationFile-Help": "The filename to move the file to.  If empty, the original filename will be used",
            "MoveFolder": "Copy Folder",
            "MoveFolder-Help": "If the relative library folder structure should be copied too",
            "DeleteOriginal": "Delete Original",
            "DeleteOriginal-Help": "If the original file should be deleted, this will only happen if the working file is different to the original file",
            "AdditionalFiles": "Additional Files",
            "AdditionalFiles-Help": "Additional files to move from the directory to the new directory.\nEach value can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn''t support regular expressions.",
            "AdditionalFilesFromOriginal": "Original Directory",
            "AdditionalFilesFromOriginal-Help": "If the additional files should be moved from the working directory or from the original directory.  Turn on for original directory."
          }
        },
        "OlderThan": {
          "Description": "Checks if a folder is older than the range specified",
          "Outputs": {
            "1": "File is older",
            "2": "File is not older"
          },
          "Fields": {
            "Number": "Number",
            "Unit": "Unit",
            "Date": "Date"
          }
        },
        "OriginalFile": {
          "Description": "Sets the current working file in the flow to the original file that started the flow",
          "Outputs": {
            "1": "Working file set to original file"
          }
        },
        "PatternMatch": {
          "Description": "Tests the working file and original file against a regular expression.\n\nOutput 1: Matches expression\nOutput 2: Does not match",
          "Outputs": {
            "1": "Matches expression",
            "2": "Does NOT match"
          },
          "Fields": {
            "Pattern": "Pattern",
            "Pattern-Help": "A regular expression, using the C# specification for regular expressions."
          }
        },
        "PatternReplacer": {
          "Label": "Filename Pattern Replacer",
          "Description": "Lets you make replacements in the filename.  Can use regular expressions for replacements, or simple string replacements.\n\nOutput 1: Replacement done\nOutput 2: No replacement done",
          "Outputs": {
            "1": "Replacement done",
            "2": "No replacement done"
          },
          "Fields": {
            "Replacements": "Replacements",
            "ReplacementsKey": "Pattern",
            "ReplacementsValue": "Value",
            "UseWorkingFileName": "Use Working Filename",
            "UseWorkingFileName-Help": "If current working filename should be used, or if false, the original filename of the incoming file will be used."
          }
        },
        "ReplaceOriginal": {
          "Description": "Replaces the original file with the working file.\n\nIf the extension is different on the working file, the original file will be deleted and the working file will be moved to the original with the new extension.\nE.g. from File.avi to File.mkv",
          "Outputs": {
            "1": "Original file replaced"
          }
        },
        "Renamer": {
          "Description": "Renames the working file.\nVariables can be used by entering the key '{' inside the Pattern field.",
          "Outputs": {
            "1": "File renamed"
          },
          "Fields": {
            "Pattern": "New Name",
            "Pattern-Help": "The new name of the file.  Can use variables. Any empty () and '{}' will be removed.",
            "DestinationPath": "Destination Folder",
            "DestinationPath-Help": "If the file should be moved to a different folder.",
            "LogOnly": "Log Only",
            "LogOnly-Help": "Turn on if you just want to test this node without it actually renaming the file",
            "CsvFile": "CSV File",
            "CsvFile-Help": "Will append to this file the original name and the renamed file.  Useful when using ''Log Only'' to test the renamer before changing files."
          }
        },
        "Sleep": {
          "Description": "Pauses the flow",
          "Outputs": {
            "1": "Flow resumed"
          },
          "Fields": {
            "Milliseconds": "Milliseconds",
            "Milliseconds-Help": "How long to sleep the flow for.  Must be between 1 millisecond and 1 hour"
          }
        },
        "Touch": {
          "Description": "Touches a file or directory and sets the last write time to now.",
          "Outputs": {
            "1": "Successfully touched item"
          },
          "Fields": {
            "FileName": "File Name",
            "FileName-Help": "Full filename of file or folder to touch.\nIf left blank the working file will be used."
          }
        },
        "VariableMatch": {
          "Description": "Tests if a input matches a stored Variable",
          "Fields": {
            "Variable": "Variable",
            "Variable-Help": "The variable to match against",
            "Input": "Input",
            "Input-Help": "The input to match the variable against."
          },
          "Outputs": {
            "1": "Input matched variable",
            "2": "Input did not match variable"
          }
        },
        "WebRequest": {
          "Description": "Allows you to send a web request",
          "Outputs": {
            "1": "Successfully sent",
            "2": "Request returned a non-successful status code"
          },
          "Fields": {
            "Url": "URL",
            "Url-Help": "The URL of the request",
            "Method": "Method",
            "Method-Help": "The web method to use when sending this request",
            "ContentType": "Content Type",
            "ContentType-Help": "The Content-Type of the message to send",
            "Headers": "Headers",
            "Headers-Help": "Optional headers to send with the request",
            "HeadersKey": "Key",
            "HeadersValue": "Value",
            "Body": "Body",
            "Body-Help": "The body of the request being sent.  Variables can be used in this field."
          }
        },
        "Unzip": {
          "Description": "Allows you to unzip a file",
          "Outputs": {
            "1": "File Unzipped"
          },
          "Fields": {
            "DestinationPath": "Destination Folder",
            "DestinationPath-Help": "The destination folder where to extract the zip file.",
            "Zip": "Zip File",
            "Zip-Help": "The filename of the zip to extract.  Can be left blank and if so the current working file will be used."
          }
        },
        "Zip": {
          "Description": "Allows you to zip the input",
          "Outputs": {
            "1": "Zip created"
          },
          "Fields": {
            "DestinationPath": "Destination Folder",
            "DestinationPath-Help": "The destination folder where to put the zip file.  If blank, the zip will be placed in the library root.",
            "DestinationFile": "Destination File",
            "DestinationFile-Help": "The filename of the newly created zip.  If blank, the name of the item will be used as the zip file."
          }
        }
      }
    }
}